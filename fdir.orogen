name "fdir"

import_types_from "std"
import_types_from "base"
import_types_from "fdirTypes.hpp"

task_context "Task" do
    needs_configuration

    property "max_slip", "double"
    property "max_roll", "double"
    property "max_pitch", "double"
    property("write_hazard_exception", "bool")

    input_port "error_in_motor", "int"
    input_port "slip_ratio", "double"
    input_port "attitude", "/base/samples/RigidBodyState"
    #input_port "trajectory_status", "waypoint_navigation_lib/NavigationState" #TODO use this instead of int
    input_port "trajectory_status", "int"
    input_port "hazard_detected", "bool"

    output_port "fault_detected", "bool"
    output_port "fdir_state", "fdir/FdirState"
    output_port("cancel_trajectory", "bool").
        doc("Stop the rover in path following without going to emergency state")

    runtime_states :NOMINAL, :EXCEPTION_ATTITUDE, :EXCEPTION_MOTORS, :EXCEPTION_TRAJECTORY, :EXCEPTION_SLIPPAGE, :EXCEPTION_HAZARD

    periodic 0.1
end

